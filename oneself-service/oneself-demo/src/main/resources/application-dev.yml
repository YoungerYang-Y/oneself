oneself:
  swagger: # swagger 主页配置
    enable: true # 开启 Swagger 主页配置，默认 false
    base-package: com.oneself # 扫描的包名，默认扫描 com.oneself 包下的所有接口
    title: oneself-demo # 接口文档标题，默认 oneself
    description: oneself-demo description # 接口文档描述，默认 oneself description
    group-name: oneself-demo # 接口文档分组名称，默认 oneself
  elasticsearch:
    enable: true
    nodes:
      - "127.0.0.1:9200"
    connect-timeout: 5000
    socket-timeout: 60000
    max-connections: 100
    max-connections-per-route: 10

feign:
  sentinel:
    enabled: true

spring:
  config:
    import:
      - nacos:${spring.application.name}-${spring.profiles.active}.yaml?refreshEnabled=true
  cloud:
    sentinel:
      transport:
        dashboard: 127.0.0.1:8090 # Sentinel 地址
    nacos:
      server-addr: 127.0.0.1:8848 # Nacos 地址
      config:
        import-check:
          enabled: false # 校验 Nacos 配置中心的配置文件是否存在
        file-extension: yaml # 在 Nacos 的文件后缀名
        group: DEFAULT_GROUP # 配置组名，可以自定义
        refresh-enabled: true # 启用自动刷新配置
        namespace: dev # 配置命名空间，使用命名空间唯一 ID
      discovery:
        cluster-name: dev # 设置 Nacos 的集群属性
        namespace: dev # 配置命名空间，使用命名空间唯一 ID
  datasource:
    dynamic:
      primary: postgres
      strict: false
      datasource:
        mysql:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/oneself_demo?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai&useSSL=false
          username: liuhuan
          password: Z6eQaNaitK5vSX
        postgres:
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://127.0.0.1:5432/oneself?currentSchema=oneself_demo&useUnicode=true&characterEncoding=utf-8
          username: admin
          password: PK3uK7pUIwUTi1
      druid: # ================== 全局 Druid 连接池配置 ==================
        # -------- 基本参数 --------
        initial-size: 10       # 初始连接数（服务启动时就建 10 个连接）
        min-idle: 10           # 最小空闲连接数（保证一定的可用连接）
        max-active: 100        # 最大活跃连接数（并发高时最多可用 100 个连接）
        max-wait: 60000        # 获取连接最大等待时间（60s），超过报错

        # -------- 空闲连接检测 --------
        time-between-eviction-runs-millis: 60000   # 每 60s 检测一次空闲连接
        min-evictable-idle-time-millis: 300000     # 连接空闲超过 5 分钟回收
        keep-alive: true                          # 保持一定数量的连接长期不被回收

        # -------- SQL 有效性检测 --------
        validation-query: SELECT 1                # 检测连接有效性的 SQL
        test-while-idle: true                     # 空闲检测时执行 validation-query
        test-on-borrow: false                     # 取连接时不检测（性能更优）
        test-on-return: false                     # 还连接时不检测（性能更优）

        # -------- PSCache（预编译 SQL 缓存）--------
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 50 # 每个连接缓存 50 条 SQL
        share-prepared-statements: true            # 是否多个连接共用缓存（一般打开）

        # -------- 监控与日志 --------
        filters: stat,wall,slf4j   # 开启统计（stat）、防火墙（wall）、SQL 日志（slf4j）

        # -------- 统计参数 --------
        stat:
          merge-sql: true              # 合并统计相同 SQL
          slow-sql-millis: 5000        # 慢 SQL 阈值（毫秒），大于 5s 记为慢 SQL
          log-slow-sql: true           # 打印慢 SQL 日志

        # -------- 防火墙参数（WallFilter）--------
        wall:
          config:
            multi-statement-allow: true  # 允许一次执行多条 SQL（默认 false）
            none-base-statement-allow: false # 禁止无 where 的 update/delete

# 完整依赖报错，暂时不使用高级功能
#knife4j:
#  enable: true # 开启增强配置，启用 Knife4j 功能
#  setting: # 前端 Ui 的个性化配置属性
#    enable-version: true # 是否开启界面中对某接口的版本控制，如果开启，后端变化后 Ui 界面会存在小蓝点，默认关闭
#    enable-footer-custom: true # 是否开启自定义 Footer，默认关闭
#    footer-custom-content: GitHub-[oneself](https://github.com/crane0927) # 自定义 Footer 内容
#  production: false # 是否开启生产环境保护策略，生产环境中会隐藏 Swagger 界面
#  basic: # 用户认证配置
#    enable: true # 是否启用用户认证功能
#    username: dev # 用户名，用于登录 Swagger 界面
#    password: dev123 # 密码，用于登录 Swagger 界面

oneself-starter:
  enabled: true
  config-value: Hello Oneself Starter